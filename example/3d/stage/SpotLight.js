// Generated by CoffeeScript 1.10.0
var LightCtrl, SpotLight;

SpotLight = (function() {
  function SpotLight(x, y, z) {
    var geometry;
    geometry = new THREE.CylinderGeometry(0.1, 2.5, 5, 32 * 2, 40, true);
    geometry.applyMatrix((new THREE.Matrix4).makeTranslation(0, -geometry.parameters.height / 2, 0));
    geometry.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI / 2));
    this.material = new THREEx.VolumetricSpotLightMaterial;
    this.mesh = new THREE.Mesh(geometry, this.material);
    this.mesh.position.set(x, y, z);
    this.mesh.lookAt(new THREE.Vector3(0, 0, 0));
    this.material.uniforms.lightColor.value.set('white');
    this.material.uniforms.spotPosition.value = this.mesh.position;
    this.spotLight = new THREE.SpotLight;
    this.spotLight.position.copy(this.mesh.position);
    this.spotLight.color = this.mesh.material.uniforms.lightColor.value;
    this.spotLight.exponent = 30;
    this.spotLight.angle = Math.PI / 3;
    this.spotLight.intensity = 3;
    this.spotLight.castShadow = true;
    this.spotLight.shadowCameraNear = 0.01;
    this.spotLight.shadowCameraFar = 100;
    this.spotLight.shadowCameraFov = 45;
    this.spotLight.shadowCameraLeft = -8;
    this.spotLight.shadowCameraRight = 8;
    this.spotLight.shadowCameraTop = 8;
    this.spotLight.shadowCameraBottom = -8;
    this.spotLight.shadowBias = 0.0;
    this.spotLight.shadowDarkness = 0.5;
    this.spotLight.shadowMapWidth = 1024;
    this.spotLight.shadowMapHeight = 1024;
    this.direction = new THREE.Vector3(0, 0, 0);
    this.lastDir = 0;
  }

  SpotLight.prototype.lookAt = function(node) {
    var target;
    target = node.position;
    this.mesh.lookAt(target);
    return this.spotLight.target.position.copy(target);
  };

  return SpotLight;

})();

LightCtrl = (function() {
  function LightCtrl() {
    this.spotLight1 = new SpotLight(-5, 30, 25);
    this.spotLight2 = new SpotLight(0, 30, 25);
    this.spotLight3 = new SpotLight(5, 30, 25);
  }

  LightCtrl.prototype.addAllToScene = function(scene) {
    scene.add(this.spotLight2.mesh);
    scene.add(this.spotLight2.spotLight);
    return scene.add(this.spotLight2.spotLight.target);
  };

  LightCtrl.prototype.lookAt = function(node) {
    return this.spotLight2.lookAt(node);
  };

  LightCtrl.prototype.randomize = function(tpf) {
    return this._foo(this.spotLight2, tpf);
  };

  LightCtrl.prototype._foo = function(spotLight, tpf) {
    var asd, p, pp, rX, rZ;
    spotLight.lastDir += tpf;
    if (spotLight.lastDir > 1) {
      spotLight.lastDir = 0;
      rX = Math.random() - 0.5;
      rZ = Math.random() - 0.5;
      asd = spotLight.spotLight.target.position;
      if (asd.x < -5) {
        rX = 0.1;
      }
      if (asd.x > 5) {
        rX = -0.1;
      }
      if (asd.z < -5) {
        rZ = 0.1;
      }
      if (asd.z > 5) {
        rZ = -0.1;
      }
      spotLight.direction.set(rX, 0, rZ);
    }
    pp = spotLight.spotLight.target.position;
    p = {
      x: pp.x,
      y: pp.y,
      z: pp.z
    };
    p.x += spotLight.direction.x;
    p.y += spotLight.direction.z;
    return spotLight.lookAt({
      position: p
    });
  };

  return LightCtrl;

})();
