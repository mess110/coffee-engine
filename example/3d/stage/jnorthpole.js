// Generated by CoffeeScript 1.10.0
window.jNorthPole = {
  BASE_URL: '/',
  help: "NorthPole JS wrapper example usage:\n\nresponseHandler = function (data) {\n  console.log(data);\n};\n\njNorthPole.BASE_URL = '/';\njNorthPole.getStorage(json, responseHandler);",
  genericRequest: function(jsonObj, method, endPoint, responseHandler, errorHandler) {
    var r;
    if (errorHandler == null) {
      errorHandler = responseHandler;
    }
    if (responseHandler == null) {
      throw 'responseHandler function missing';
    }
    r = new XMLHttpRequest;
    r.open(method, "" + this.BASE_URL + endPoint + ".json", true);
    r.onreadystatechange = function() {
      var err, error;
      if (r.readyState !== 4) {
        return;
      }
      if (r.status === 200) {
        responseHandler(JSON.parse(r.responseText), r.status);
      } else {
        try {
          errorHandler(JSON.parse(r.responseText), r.status);
        } catch (error) {
          err = error;
          errorHandler(r.responseText, r.status);
        }
      }
    };
    r.send(JSON.stringify(jsonObj));
  },
  createUser: function(api_key, secret, success, failure) {
    var jsonObj;
    jsonObj = {
      'api_key': api_key,
      'secret': secret
    };
    this.genericRequest(jsonObj, 'POST', 'user', success, failure);
  },
  getUser: function(jsonObj, responseHandler, errorHandler) {
    this.genericRequest(jsonObj, 'SEARCH', 'user', responseHandler, errorHandler);
  },
  createStorage: function(jsonObj, responseHandler, errorHandler) {
    this.genericRequest(jsonObj, 'POST', 'storage', responseHandler, errorHandler);
  },
  getStorage: function(jsonObj, responseHandler, errorHandler) {
    this.genericRequest(jsonObj, 'SEARCH', 'storage', responseHandler, errorHandler);
  },
  putStorage: function(jsonObj, responseHandler, errorHandler) {
    this.genericRequest(jsonObj, 'PUT', 'storage', responseHandler, errorHandler);
  },
  deleteStorage: function(jsonObj, responseHandler, errorHandler) {
    this.genericRequest(jsonObj, 'DELETE', 'storage', responseHandler, errorHandler);
  }
};
