// Generated by CoffeeScript 1.4.0
var NetworkManager;

NetworkManager = (function() {
  var PrivateClass, instance;

  function NetworkManager() {}

  instance = null;

  PrivateClass = (function() {

    function PrivateClass() {
      this.socket = void 0;
    }

    PrivateClass.prototype.connect = function(namespace) {
      if (namespace == null) {
        namespace = '/';
      }
      this.socket = io.connect(namespace);
      this.socket.on("error", function(err) {
        return console.error(err);
      });
      return this.socket.on("message", function(msg) {
        return console.log(msg);
      });
    };

    PrivateClass.prototype.emit = function(event, params) {
      params.timestamp = new Date().getTime();
      return this.socket.emit(event, params);
    };

    return PrivateClass;

  })();

  NetworkManager.get = function() {
    return instance != null ? instance : instance = new PrivateClass();
  };

  return NetworkManager;

})();
