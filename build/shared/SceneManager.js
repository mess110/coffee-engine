// Generated by CoffeeScript 1.9.3
var SceneManager;

SceneManager = (function() {
  var PrivateClass, instance;

  function SceneManager() {}

  instance = null;

  PrivateClass = (function() {
    function PrivateClass() {
      this.scenes = [];
      this.currentSceneIndex = void 0;
    }

    PrivateClass.prototype.currentScene = function() {
      if (this.currentSceneIndex === void 0) {
        throw 'SceneManager.setScene not called';
      }
      if (this.scenes.length === 0) {
        throw 'Requires at least one scene';
      }
      return this.scenes[this.currentSceneIndex];
    };

    PrivateClass.prototype.addScene = function(scene) {
      var i;
      i = this.scenes.indexOf(scene);
      if (i === -1) {
        return this.scenes.push(scene);
      }
    };

    PrivateClass.prototype.removeScene = function(scene) {
      var i;
      i = this.scenes.indexOf(scene);
      return this.removeSceneByIndex(i);
    };

    PrivateClass.prototype.removeSceneByIndex = function(i) {
      if (i >= 0) {
        if (i === this.currentSceneIndex) {
          this.currentSceneIndex = void 0;
        }
        return array.splice(i, 1);
      }
    };

    PrivateClass.prototype.setScene = function(scene) {
      var i;
      i = this.scenes.indexOf(scene);
      this.setSceneByIndex(i);
      return this.currentScene();
    };

    PrivateClass.prototype.setSceneByIndex = function(i) {
      if (!this.isEmpty() && this.isValidIndex(i)) {
        this.currentSceneIndex = i;
      }
      return this.currentScene();
    };

    PrivateClass.prototype.isEmpty = function() {
      return this.scenes.length === 0;
    };

    PrivateClass.prototype.isValidIndex = function(i) {
      return 0 <= i && i < this.scenes.length;
    };

    PrivateClass.prototype.tick = function(tpf) {
      return this.currentScene().tick(tpf);
    };

    return PrivateClass;

  })();

  SceneManager.get = function() {
    return instance != null ? instance : instance = new PrivateClass();
  };

  return SceneManager;

})();
