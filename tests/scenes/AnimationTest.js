// Generated by CoffeeScript 1.10.0
var AnimationTest,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

AnimationTest = (function(superClass) {
  extend(AnimationTest, superClass);

  function AnimationTest() {
    return AnimationTest.__super__.constructor.apply(this, arguments);
  }

  AnimationTest.prototype.init = function() {
    AnimationTest.__super__.init.call(this);
    this.scene.add(Helper.ambientLight());
    this.scene.add(Helper.ambientLight());
    this.scene.add(Helper.ambientLight());
    if (this.jmm.items['chicken'] != null) {
      this.model = new BaseModel();
      this.model.mesh = this.jmm.clone('chicken');
      this.scene.add(this.model.mesh);
      return this.model.mesh.animations[0].play();
    } else {
      return this.jmm.load('chicken', 'assets/chicken.json', function(mesh) {
        var model, scene;
        scene = SceneManager.get().currentScene();
        model = new BaseModel();
        model.mesh = mesh;
        scene.model = model;
        scene.scene.add(model.mesh);
        return mesh.animations[0].play();
      });
    }
  };

  AnimationTest.prototype.tick = function(tpf) {};

  AnimationTest.prototype.testInfo = function() {
    return console.log('SceneManager.get().currentScene().model.animate(1)');
  };

  AnimationTest.prototype.doMouseEvent = function(event, raycaster) {};

  AnimationTest.prototype.doKeyboardEvent = function(event) {};

  return AnimationTest;

})(TestScene);
